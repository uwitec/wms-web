<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.teeny.wms.core.repository.InventoryRepository">
    <select id="getPdType" resultType="com.teeny.wms.dto.CommonDTO">
        SELECT
            b.billid AS id,
            b.pdname AS name
        FROM ${account}.dbo.pda_pdBill b
        WHERE b.billstates = #{type} AND b.pdastates &lt; 2
        <if test="sId != 0">
            AND b.s_id = #{sId}
        </if>
    </select>

    <resultMap id="repositoryList" type="RepositoryEntity">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="areas" javaType="ArrayList" ofType="AreaEntity"
                    column="{account = account, repositoryId = id}"
                    select="com.teeny.wms.core.repository.InventoryRepository.getAreaList"/>
    </resultMap>

    <select id="getCollection" resultMap="repositoryList">
        SELECT DISTINCT
            sa.sa_id            AS id,
            isnull(sa.name, '') AS name,
            #{account}          AS account
        FROM ${account}.dbo.pda_pdBill_D d
            LEFT JOIN ${account}.dbo.pda_location l ON l.l_id = d.Location_id
            LEFT JOIN ${account}.dbo.pda_stockArea sa ON sa.sa_id = l.sa_id
        WHERE d.bill_id = #{id} AND sa.sa_id > 0
        ORDER BY name
    </select>

    <select id="getAreaList" resultType="AreaEntity">
        SELECT DISTINCT
            a.sc_id            AS id,
            isnull(a.name, '') AS name
        FROM ${account}.dbo.pda_Area a
        WHERE a.sa_id = #{repositoryId} AND a.sc_id > 0
        ORDER BY name
    </select>

    <select id="count" resultType="InventoryCountEntity">
        SELECT
            sum(CASE DealStates WHEN 0 THEN 1 ELSE 0 END) AS unfinishedNumber,
            sum(CASE DealStates WHEN 1 THEN 1 ELSE 0 END) AS finishedNumber
        FROM ${account}.dbo.pda_pdBill_D d
            LEFT JOIN ${account}.dbo.pda_location l ON l.l_id = d.Location_id
        WHERE d.bill_id = #{id}
        <if test="repositoryId > 0">
            AND l.sa_id = #{repositoryId}
        </if>
        <if test="areaId > 0">
            AND l.sc_id = #{areaId}
        </if>
        <if test="barcode != null and barcode != ''">
            AND l.loc_code = #{barcode}
        </if>
        <if test="isMerge">
            AND d.smb_id = (SELECT min(smb_id) AS id FROM ${account}.dbo.pda_pdBill_D WHERE d.original_id = original_id)
        </if>
    </select>

    <select id="getList" resultType="InventoryGoodsEntity">
        SELECT
            d.smb_id                               AS id,
            d.original_id                          AS originalId,
            d.bill_id                              AS billId,
            d.p_id                                 AS goodsId,
            p.name                                 AS goodsName,
            l.loc_code                             AS location,
            d.EligibleQty                          AS countInBill,
            d.pdQty                                AS inventoryCount,
            p.unit1Name                            AS unit,
            p.standard                             AS specification,
            p.Factory                              AS manufacturer,
            d.DealStates                           AS status,
            l.loc_code                             AS locationCode,
            p.barcode                              AS goodsCode,
            d.Batchno                              AS lotNo,
            CONVERT(VARCHAR(100), d.Validdate, 23) AS validateDate,
            CONVERT(VARCHAR(100), d.MakeDate, 23)  AS productionDate,
            p.pinyin                               AS pinyin
        FROM ${account}.dbo.pda_pdBill_D d
            LEFT JOIN ${account}.dbo.pda_Products p ON d.p_id = p.p_id
            LEFT JOIN ${account}.dbo.pda_location l ON l.l_id = d.Location_id
        WHERE d.bill_id = #{id} AND l.loc_code = #{locationCode}
        <if test="repositoryId > 0">
            AND l.sa_id = #{repositoryId}
        </if>
        <if test="areaId > 0">
            AND l.sc_id = #{areaId}
        </if>
        <if test="isMerge">
            AND d.smb_id = (SELECT min(smb_id) AS id FROM ${account}.dbo.pda_pdBill_D WHERE d.original_id = original_id)
        </if>
        ORDER BY l.l_id
    </select>

    <update id="updateInventoryStatus">
        UPDATE ${account}.dbo.pda_pdBill
        SET pdastates = #{status}, pdaWrTime = getdate()
        WHERE billid = #{id}
    </update>

    <update id="complete">
        UPDATE ${account}.dbo.pda_pdBill_D
        SET DealStates = 1, pdQty = EligibleQty, wctime = getdate(), loginid = #{userId}
        WHERE original_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>

        <selectKey keyProperty="count" resultType="int" order="AFTER">
            SELECT count(*)
            FROM ${account}.dbo.pda_pdBill_D d
            WHERE d.DealStates = 0 AND d.bill_id = (SELECT DISTINCT d1.bill_id
            FROM ${account}.dbo.pda_pdBill_D d1
            WHERE d1.original_id = #{originalId})
        </selectKey>

        <if test="count==0">
            UPDATE ${account}.dbo.pda_pdBill
            SET pdastates = 2
            WHERE billid = (SELECT DISTINCT d.bill_id
            FROM ${account}.dbo.pda_pdBill_D d
            WHERE d.original_id = #{originalId})
        </if>
    </update>
</mapper>